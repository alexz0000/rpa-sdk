// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Meta meta
// swagger:model Meta
type Meta struct {

	// What time is the assignment created
	CreatedTime int64 `json:"createdTime,omitempty"`

	// The assignment's id, it's a uuid
	ID string `json:"id,omitempty"`

	// How long the job could be executed
	MaxRunTime int64 `json:"maxRunTime,omitempty"`

	// The name of a job which will be executed
	Name string `json:"name,omitempty"`

	// Whether the assignment need to be updated
	NeedUpdate bool `json:"needUpdate,omitempty"`

	// The parameters that the job needs
	Params map[string]interface{} `json:"params,omitempty"`

	// What time the job will be executed
	RunAt int64 `json:"runAt,omitempty"`

	// What type the job will be executed
	// The values are 'asap','laterThan','inOrder'
	RunType string `json:"runType,omitempty"`

	// The assignment's status, could be 'waiting','running','completed'
	Status string `json:"status,omitempty"`

	// What time is the assignment updated
	UpdatedTime int64 `json:"updatedTime,omitempty"`

	// The version of a job which will be executed
	Version string `json:"version,omitempty"`
}

// Validate validates this meta
func (m *Meta) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Meta) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Meta) UnmarshalBinary(b []byte) error {
	var res Meta
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
